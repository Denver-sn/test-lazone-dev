services:
  db:
    image: postgres:16-alpine
    container_name: medusa_db
    environment:
      POSTGRES_USER: medusa
      POSTGRES_PASSWORD: medusa
      POSTGRES_DB: medusa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medusa -d medusa"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: medusa_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  medusa:
    build:
      context: ./medusa
    container_name: medusa_server
    env_file:
      - ./.env
    environment:
      # Database
      DATABASE_URL: ${DATABASE_URL:-postgresql://medusa:medusa@db:5432/medusa}
      # CORS
      STORE_CORS: ${STORE_CORS:-http://localhost:3000}
      ADMIN_CORS: ${ADMIN_CORS:-http://localhost:7001}
      AUTH_CORS: ${AUTH_CORS:-http://localhost:3000}
      # Secrets
      JWT_SECRET: ${JWT_SECRET:-supersecret}
      COOKIE_SECRET: ${COOKIE_SECRET:-supersecret}
      # Optional Redis (used by Medusa for cache/queues)
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "9000:9000"
    restart: unless-stopped

  web:
    build:
      context: ./web
      args:
        NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY: ${NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY}
        MEDUSA_BACKEND_URL: ${MEDUSA_BACKEND_URL:-http://localhost:9000}
    container_name: medusa_web
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      # SDK base URL (browser must reach this URL)
      MEDUSA_BACKEND_URL: ${MEDUSA_BACKEND_URL:-http://localhost:9000}
      NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY: ${NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY}
    depends_on:
      - medusa
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  postgres_data:
